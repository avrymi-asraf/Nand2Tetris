// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/MemoryTest/Main.jack

/** Test program for the OS Memory class. */
class Main {

    /** Performs various memory manipulations. */
    function void main() {
        var int temp1, temp2 ,err,temp;
        var int mem1, mem2,mem3,mem4;
        var Array a, b, c;


        //peek, poke
        do Memory.poke(8000, 333);       // RAM[8000] = 333
        let temp1 = Memory.peek(8000);
        do Memory.poke(8001, temp1 + 1);  // RAM[8001] = 334
        let temp2 = Memory.peek(8001); 
        do Output.printInt(temp1);
        do Output.printChar(32);
        do Output.printInt(temp2);
        do Output.println();

        let mem1 = Memory.alloc(10);
        do Output.printInt(mem1);
        do Output.println();

        let mem2 = Memory.alloc(20);
        do Output.printInt(mem2);
        do Output.println();

        let mem3 = Memory.alloc(30);
        do Output.printInt(mem3);
        do Output.println();

        let mem4 = Memory.alloc(40);
        do Output.printInt(mem4);
        do Output.println();


        do Memory.deAlloc(mem3);
        do Memory.deAlloc(mem2);
        do Memory.deAlloc(mem1);
        do Memory.deAlloc(mem4);


        // do Output.printChar(32);
        // // do Output.printInt(temp1);
        // do Output.println();

        
        
        // let a = Array.new(3);            // uses Memory.alloc
        // let a[2] = 222;
        // // do Memory.poke(8002, a[2]);      // RAM[8002] = 222
        // // let temp1 = Memory.peek(8002);


		// // let err = 0;
        // let b = Array.new(3);
        // let b[1] = a[2] - 100;
		// if (b = a) {					  // Fail compare if b = a
		// 	let err = 1; }
        // do Memory.poke(8003, b[1] + err); // RAM[8003] = 122
        
		// let err = 0;
        // let c = Array.new(500);
        // let c[499] = a[2] - b[1];
		// if (c = a) {					  // Fail compare if c = a
		// 	let err = 1; }
		// if (c = b) {					  // Fail compare if c = b
		// 	let err = err + 10; }
        // do Memory.poke(8004, c[499]+err); // RAM[8004] = 100
        
        // do a.dispose();                   // uses Memory.deAlloc
        // do b.dispose();
        
		// let err = 0;
        // let b = Array.new(3);
        // let b[0] = c[499] - 90;
		// if (b = c) {					  // Fail compare if b = c
		// 	let err = 1; }
        // do Memory.poke(8005, b[0] + err); // RAM[8005] = 10
        
        // do c.dispose();
        // do b.dispose();
        
        return;
    }
}
